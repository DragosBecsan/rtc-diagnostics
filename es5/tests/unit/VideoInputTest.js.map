{"version":3,"file":"VideoInputTest.js","sourceRoot":"","sources":["../../../tests/unit/VideoInputTest.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable only-arrow-functions\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { DiagnosticError } from '../../lib/errors';\nimport {\n  testVideoInputDevice,\n  VideoInputTest,\n} from '../../lib/VideoInputTest';\nimport { mockGetUserMediaFactory } from '../mocks/mockGetUserMedia';\nimport { MockHTMLMediaElement } from '../mocks/MockHTMLMediaElement';\nimport { MockMediaStream } from '../mocks/MockMediaStream';\nimport { MockTrack } from '../mocks/MockTrack';\n\nfunction createTestOptions(\n  overrides: Partial<VideoInputTest.Options> = {},\n): VideoInputTest.Options {\n  return {\n    duration: 1000,\n    getUserMedia: mockGetUserMediaFactory({\n      mediaStream: new MockMediaStream({\n        tracks: [new MockTrack({ kind: 'video' })],\n      }),\n    }) as any,\n    ...overrides,\n  };\n}\n\ndescribe('testVideoInputDevice', function() {\n  let clock: sinon.SinonFakeTimers;\n\n  before(function() {\n    clock = sinon.useFakeTimers();\n  });\n\n  after(function() {\n    sinon.restore();\n  });\n\n  function createBasicTest(\n    testOptions: VideoInputTest.Options,\n  ) {\n    const handlers = {\n      [VideoInputTest.Events.End]: sinon.stub(),\n      [VideoInputTest.Events.Error]: sinon.stub(),\n    };\n\n    const videoInputTest = testVideoInputDevice(testOptions);\n    videoInputTest.on(VideoInputTest.Events.Error, handlers.error);\n    videoInputTest.on(VideoInputTest.Events.End, handlers.end);\n\n    const resetHandlers =\n      () => Object.values(handlers).forEach(handler => handler.reset());\n\n    return {\n      handlers,\n      resetHandlers,\n      videoInputTest,\n    };\n  }\n\n  it('should throw if passed invalid options', async function() {\n    const invalidOptions = [{\n      deviceId: 0,\n    }, {\n      deviceId: {},\n    }, {\n      duration: -10,\n    }, {\n      duration: {},\n    }] as any;\n\n    for (const overrides of invalidOptions) {\n      const options = createTestOptions(overrides);\n      const { handlers } = createBasicTest(options);\n      await clock.runAllAsync();\n      assert(handlers.end.calledOnce);\n      assert(handlers.error.calledOnce);\n      assert(handlers.end.calledAfter(handlers.error));\n    }\n  });\n\n  it('should warn if stopped multiple times', async function() {\n    const consoleStub = sinon.stub(console, 'warn');\n    try {\n      const options = createTestOptions({ debug: true });\n      const test = testVideoInputDevice(options);\n      test.stop();\n      test.stop();\n      assert(consoleStub.calledOnce);\n    } finally {\n      await clock.runAllAsync();\n      consoleStub.restore();\n    }\n  });\n\n  describe('in a supported environment', function() {\n    describe('when `getUserMedia` returns a valid stream', function() {\n      let errorHandler: sinon.SinonStub;\n      let endHandler: sinon.SinonStub;\n      let trackStub: sinon.SinonStub<[], void>;\n\n      before(async function() {\n        const track = new MockTrack({ kind: 'video' });\n        trackStub = sinon.stub(track, 'stop');\n        const options = createTestOptions({\n          getUserMedia: mockGetUserMediaFactory({\n            mediaStream: new MockMediaStream({\n              tracks: [track],\n            }),\n          }),\n        });\n        const { handlers } = createBasicTest(options);\n        await clock.runAllAsync();\n        endHandler = handlers.end;\n        errorHandler = handlers.error;\n      });\n\n      it('should not have emitted any error event', function() {\n        assert(errorHandler.notCalled);\n      });\n\n      it('should generate a valid report', function() {\n        assert(endHandler.calledOnce);\n        const report: VideoInputTest.Report = endHandler.args[0][0];\n        assert(report);\n      });\n\n      it('should have cleaned up the stream', function() {\n        assert(trackStub.calledOnce);\n      });\n    });\n\n    describe('when a video element is provided', function() {\n      let errorHandler: sinon.SinonStub;\n      let endHandler: sinon.SinonStub;\n      let pauseStub: sinon.SinonStub;\n      let playStub: sinon.SinonStub;\n      let setSrcObjectStub: sinon.SinonStub;\n      let setSrcStub: sinon.SinonStub;\n      let loadStub: sinon.SinonStub;\n      let mediaStream: MockMediaStream;\n\n      before(async function() {\n        const element: any = new MockHTMLMediaElement();\n\n        pauseStub = sinon.stub(element, 'pause');\n        playStub = sinon.stub(element, 'play').resolves();\n        loadStub = sinon.stub(element, 'load');\n\n        setSrcObjectStub = sinon.stub();\n        sinon.stub(element, 'srcObject').set(setSrcObjectStub);\n\n        setSrcStub = sinon.stub();\n        sinon.stub(element, 'src').set(setSrcStub);\n\n        mediaStream = new MockMediaStream({\n          tracks: [new MockTrack({ kind: 'video' })],\n        });\n\n        const options = createTestOptions({\n          element,\n          getUserMedia: mockGetUserMediaFactory({\n            mediaStream,\n          }) as any,\n        });\n        const { handlers } = createBasicTest(options);\n        await clock.runAllAsync();\n        endHandler = handlers.end;\n        errorHandler = handlers.error;\n      });\n\n      it('should have ended successfully', function() {\n        assert(endHandler.calledOnce);\n        assert(errorHandler.notCalled);\n      });\n\n      it('should have called play on the element', function() {\n        assert(playStub.calledOnce);\n      });\n\n      it('should have set the src object to the stream', function() {\n        assert.equal(setSrcObjectStub.args[0][0], mediaStream);\n      });\n\n      it('should clean up the element', function() {\n        assert(pauseStub.calledAfter(playStub));\n        assert(pauseStub.calledOnce);\n\n        assert.equal(setSrcObjectStub.args[1][0], null);\n        assert(setSrcObjectStub.calledAfter(pauseStub));\n\n        assert(setSrcStub.calledOnce);\n        assert.equal(setSrcStub.args[0][0], '');\n        assert(setSrcStub.calledAfter(pauseStub));\n\n        assert(loadStub.calledOnce);\n        assert(loadStub.calledAfter(setSrcStub));\n        assert(loadStub.calledAfter(setSrcObjectStub));\n      });\n    });\n  });\n\n  describe('in an unsupported environment', function() {\n    describe('it should immediately end and report an error', function() {\n      ([ [\n        'getUserMedia', createTestOptions({ getUserMedia: undefined }),\n      ] ] as const).forEach(([title, options]) => {\n        it(`when ${title} is not supported`, async function() {\n          const { handlers } = createBasicTest(options);\n          await clock.runAllAsync();\n          const endHandler = handlers.end;\n          const errorHandler = handlers.error;\n\n          assert(endHandler.calledOnce);\n          const report: VideoInputTest.Report = endHandler.args[0][0];\n          assert(report);\n          assert(errorHandler.calledOnce);\n          assert(errorHandler.calledBefore(endHandler));\n        });\n      });\n    });\n  });\n\n  it('`testTiming` should not be in the report if gUM throws', async function() {\n    const options = createTestOptions({\n      getUserMedia: mockGetUserMediaFactory({ throw: new DiagnosticError() }),\n    });\n    const { handlers } = createBasicTest(options);\n    await clock.runAllAsync();\n    assert(handlers.end.calledOnce);\n    assert(handlers.error.calledOnce);\n    assert(handlers.end.calledAfter(handlers.error));\n\n    const handledError = handlers.error.args[0][0];\n    const report: VideoInputTest.Report = handlers.end.args[0][0];\n    assert.equal(report.errors.length, 1);\n    assert.equal(handledError, report.errors[0]);\n    assert(!('testTiming' in report));\n  });\n\n  describe('should handle when an error is thrown during the test', function() {\n    ([ [\n      'getUserMedia', createTestOptions({\n        getUserMedia: mockGetUserMediaFactory({\n          throw: new DiagnosticError(),\n        }) as any,\n      }),\n    ] ] as const).forEach(([title, options]) => {\n      it(`by ${title}`, async function() {\n        const { handlers } = createBasicTest(options);\n        await clock.runAllAsync();\n        assert(handlers.end.calledOnce);\n        const report: VideoInputTest.Report = handlers.end.args[0][0];\n        assert(report);\n        assert(handlers.error.calledOnce);\n        assert(handlers.error.calledBefore(handlers.end));\n      });\n    });\n\n    ([ [\n      'DiagnosticError', new DiagnosticError(),\n    ], [\n      'DOMException', new (global as any).DOMException(),\n    ], [\n      'DOMError', new (global as any).DOMError(),\n    ], [\n      'Error', new Error(),\n    ], [\n      'unknown error', {},\n    ] ] as const).forEach(([title, error]) => {\n      it(`of type ${title}`, async function() {\n        const options = createTestOptions({\n          getUserMedia: mockGetUserMediaFactory({ throw: error }),\n        });\n        const { handlers } = createBasicTest(options);\n        await clock.runAllAsync();\n        assert(handlers.end.calledOnce);\n        assert(handlers.error.calledOnce);\n        assert(handlers.end.calledAfter(handlers.error));\n\n        const handledError = handlers.error.args[0][0];\n        const report: VideoInputTest.Report = handlers.end.args[0][0];\n        assert.equal(report.errors.length, 1);\n        assert.equal(handledError, report.errors[0]);\n        assert(!('testTiming' in report));\n      });\n    });\n  });\n});\n"]}