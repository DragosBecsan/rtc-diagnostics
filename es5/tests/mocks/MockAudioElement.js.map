{"version":3,"file":"MockAudioElement.js","sourceRoot":"","sources":["../../../tests/mocks/MockAudioElement.ts"],"names":[],"mappings":";AAAA,+CAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElC,QAAA,uBAAuB,GAAG,UACrC,OAAsC;IAAtC,wBAAA,EAAA,YAAsC;IAEtC,OAAA,OAAO,CAAC,gBAAgB;QACtB,CAAC;YAAC;gBACE,SAAI,GAAG,KAAK,CAAC;YAKf,CAAC;YAJC,uBAAK,GAAL,cAAS,CAAC;YACJ,sBAAI,GAAV;;;;aAAe;YACf,8BAAY,GAAZ,cAAgB,CAAC;YACX,2BAAS,GAAf;;;;aAAoB;YACtB,cAAC;QAAD,CAAC,AAND,IAOF,CAAC;QAAC;YACE,SAAI,GAAG,KAAK,CAAC;QAIf,CAAC;QAHC,uBAAK,GAAL,cAAS,CAAC;QACJ,sBAAI,GAAV;;;;SAAe;QACf,8BAAY,GAAZ,cAAgB,CAAC;QACnB,cAAC;IAAD,CAAC,AALD,GAKC;AAbL,CAaK,CAAC","sourcesContent":["// tslint:disable no-empty max-classes-per-file\n\nexport const mockAudioElementFactory = (\n  options: MockAudioElement.Options = {},\n) =>\n  options.supportSetSinkId\n    ? class {\n        loop = false;\n        pause() {}\n        async play() {}\n        setAttribute() {}\n        async setSinkId() {}\n      }\n    : class {\n        loop = false;\n        pause() {}\n        async play() {}\n        setAttribute() {}\n      };\n\nexport namespace MockAudioElement {\n  export interface Options {\n    supportSetSinkId?: boolean;\n  }\n}\n"]}