{"version":3,"file":"InvalidOptionsError.js","sourceRoot":"","sources":["../../../lib/errors/InvalidOptionsError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0CAAyC;AACzC,qDAAoD;AAEpD;;;GAGG;AACH;IAEU,uCAAe;IAGvB,6BAAY,OAA2C;QAAvD,YACE,kBACE,SAAS,EACT,sEAAsE,CACvE,SAIF;QAVD,aAAO,GAAuC,EAAE,CAAC;QAQ/C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,IAAI,GAAG,qBAAS,CAAC,mBAAmB,CAAC;;IAC5C,CAAC;IACH,0BAAC;AAAD,CAAC,AAdD,CAEU,iCAAe,GAYxB;AAdY,kDAAmB","sourcesContent":["import { ErrorName } from '../constants';\nimport { DiagnosticError } from './DiagnosticError';\n\n/**\n * @internalapi\n * Error that is thrown when there are invalid options passed to a test.\n */\nexport class InvalidOptionsError<\n  T extends Record<string, any>\n> extends DiagnosticError {\n  reasons: Partial<Record<keyof T, string[]>> = {};\n\n  constructor(reasons: Partial<Record<keyof T, string[]>>) {\n    super(\n      undefined,\n      'Some of the options passed to this test were unable to be validated.',\n    );\n\n    this.reasons = reasons;\n    this.name = ErrorName.InvalidOptionsError;\n  }\n}\n"]}