{"version":3,"file":"InvalidStateError.js","sourceRoot":"","sources":["../../../lib/errors/InvalidStateError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0CAAyC;AACzC,qDAAoD;AAEpD;;;;GAIG;AACH;IAAuC,qCAAe;IACpD;;;OAGG;IACH,2BAAY,OAAgB;QAA5B,YACE,kBAAM,SAAS,EAAE,OAAO,CAAC,SAG1B;QADC,KAAI,CAAC,IAAI,GAAG,qBAAS,CAAC,iBAAiB,CAAC;;IAC1C,CAAC;IACH,wBAAC;AAAD,CAAC,AAVD,CAAuC,iCAAe,GAUrD;AAVY,8CAAiB","sourcesContent":["import { ErrorName } from '../constants';\nimport { DiagnosticError } from './DiagnosticError';\n\n/**\n * @internalapi\n * Represents when a test in the Diagnostics SDK is an unknown or unexpected\n * state, usually resulting in fatal error.\n */\nexport class InvalidStateError extends DiagnosticError {\n  /**\n   * Sets the name to `InvalidStateError`.\n   * @param message\n   */\n  constructor(message?: string) {\n    super(undefined, message);\n\n    this.name = ErrorName.InvalidStateError;\n  }\n}\n"]}