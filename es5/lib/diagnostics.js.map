{"version":3,"file":"diagnostics.js","sourceRoot":"","sources":["../../lib/diagnostics.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,6CAAyD;AAkCvD,sBAlCO,yBAAW,CAkCP;AAIX,sBAtCoB,yBAAW,CAsCpB;AArCb,yCAAqD;AAkCnD,oBAlCO,qBAAS,CAkCP;AAMT,sBAxCkB,uBAAW,CAwClB;AAvCb,yCAAyD;AAkCvD,oBAlCO,qBAAS,CAkCP;AAGT,0BArCkB,2BAAe,CAqClB;AApCjB,2CAA4D;AAkC1D,qBAlCO,uBAAU,CAkCP;AAGV,2BArCmB,6BAAgB,CAqCnB;AAxBlB;;;;;GAKG;AACH,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AACpC,MAAM,CAAC,MAAM,CAAC,WAAW,yBACpB,MAAM,CAAC,MAAM,CAAC,WAAW,KAC5B,WAAW,2BAAA;IACX,eAAe,6BAAA;IACf,gBAAgB,+BAAA,GACjB,CAAC","sourcesContent":["import { BitrateTest, testBitrate } from './BitrateTest';\nimport { ErrorName, WarningName } from './constants';\nimport { InputTest, testInputDevice } from './InputTest';\nimport { OutputTest, testOutputDevice } from './OutputTest';\n\n/**\n * @internalapi\n * Tell Typescript that we would like to modify the `Twilio` object on the\n * `window` global.\n */\ndeclare global {\n  interface Window {\n    Twilio: Object & { Diagnostics?: any };\n  }\n}\n\n/**\n * If the `Twilio` object does not exist, make it.\n * Then, add the `Diagnostics` object to it.\n * This makes `window.Twilio.Diagnostics` available after loading the bundle in\n * the browser.\n */\nwindow.Twilio = window.Twilio || {};\nwindow.Twilio.Diagnostics = {\n  ...window.Twilio.Diagnostics,\n  testBitrate,\n  testInputDevice,\n  testOutputDevice,\n};\n\n/**\n * Expose the tests if installed as a npm module for both TS and JS\n */\nexport {\n  BitrateTest,\n  ErrorName,\n  InputTest,\n  OutputTest,\n  testBitrate,\n  testInputDevice,\n  testOutputDevice,\n  WarningName,\n};\n"]}